name: Sync Fork with All Upstream Branches

on:
  schedule:
    - cron: '0 0 * * 1'  # Runs every Monday at midnight UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Fork
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect Upstream Automatically
        id: detect-upstream
        run: |
          set -euxo pipefail
          # Detect the upstream repository from the fork
          UPSTREAM_URL=$(git remote -v | grep fetch | grep -o 'https://github.com/.*' | head -n 1)
          if [ -z "$UPSTREAM_URL" ]; then
            echo "No upstream repository found. Exiting."
            exit 1
          fi
          # Clean up the URL to remove extra characters (like '(fetch)')
          UPSTREAM_URL=$(echo "$UPSTREAM_URL" | sed 's/ (fetch)//')
          # Extract owner and repository name from URL
          UPSTREAM_OWNER=$(echo "$UPSTREAM_URL" | cut -d'/' -f4)
          UPSTREAM_REPO=$(echo "$UPSTREAM_URL" | cut -d'/' -f5 | sed 's/.git$//')
          echo "Detected upstream: $UPSTREAM_OWNER/$UPSTREAM_REPO"

          # Save values to environment file
          echo "UPSTREAM_OWNER=$UPSTREAM_OWNER" >> $GITHUB_ENV
          echo "UPSTREAM_REPO=$UPSTREAM_REPO" >> $GITHUB_ENV

      - name: Debug Remote Configuration
        run: |
          set -euxo pipefail
          git remote -v

      - name: Add and Fetch Upstream
        run: |
          set -euxo pipefail
          git remote remove upstream || true
          git remote add upstream https://github.com/${UPSTREAM_OWNER}/${UPSTREAM_REPO}.git
          git fetch upstream

      - name: Sync All Upstream Branches
        run: |
          set -euxo pipefail
          # Define a branch in the fork for executing GitHub Actions (to prevent conflicts with upstream branches)
          ACTION_BRANCH="sync-action"
          
          # Checkout the action branch (create it if it doesn't exist)
          if git show-ref --quiet refs/heads/$ACTION_BRANCH; then
            git checkout $ACTION_BRANCH
          else
            git checkout -b $ACTION_BRANCH
          fi

          # Fetch all branches from the upstream repository
          git fetch upstream "+refs/heads/*:refs/remotes/upstream/*"

          # Loop through all upstream branches and sync them with corresponding branches in the fork
          for branch in $(git branch -r | grep "upstream/" | sed 's/upstream\///'); do
            echo "Syncing upstream branch $branch"
            # Checkout the branch in the fork (create if not exists)
            if git show-ref --quiet refs/heads/$branch; then
              git checkout $branch
            else
              git checkout -b $branch
            fi
            
            # Merge the upstream branch into the fork's branch
            git merge upstream/$branch --allow-unrelated-histories --no-edit
            git push origin $branch --force  # Push the merged changes to the fork
          done
